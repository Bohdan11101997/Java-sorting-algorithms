package lab1;

/**
 * Created by Роман on 05.02.2017.
 */
public class TestRunner{


    public static void main(String[] args)
    {
        Sorter sorts=new BubbleSorter();
        Sorter sorts2=new InsertionSorter();
        Sorter sorts3=new ShellSorter();
        Sorter sorts4=new QuickSorter();
        Sorter sorts5 =new DefaultSorter();
        Generator generator=new SortedGenerator();
        Generator generator1=new InverseSortedGenerator();
        Generator generator2=new AlmostSortedGenerator();
        Generator generator3=new RandomSortedGenerator();
       //    BubbleSorter for SortedGenerator
        long startTime = System.currentTimeMillis();
        sorts.sort(generator.generate(10));
        long timeSpent = System.currentTimeMillis() - startTime;
        System.out.println(" Программа выполнялась " + timeSpent + " миллисекунд");
        long startTime1 = System.currentTimeMillis();
        sorts.sort(generator.generate(100));
        long timeSpent1 = System.currentTimeMillis() - startTime1;
        System.out.println(" Программа выполнялась " + timeSpent1 + " миллисекунд");
        long startTime2 = System.currentTimeMillis();
        sorts.sort(generator.generate(1000));
        long timeSpent2 = System.currentTimeMillis() - startTime2;
        System.out.println(" Программа выполнялась " + timeSpent2 + " миллисекунд");
        long startTime3 = System.currentTimeMillis();
        sorts.sort(generator.generate(10000));
        long timeSpent3 = System.currentTimeMillis() - startTime1;
        System.out.println(" Программа выполнялась " + timeSpent3 + " миллисекунд");
       // InsertionSorter for SortedGenerator
        long startTime4 = System.currentTimeMillis();
        sorts2.sort(generator.generate(10));
        long timeSpent4 = System.currentTimeMillis() - startTime4;
        System.out.println(" Программа выполнялась " + timeSpent4 + " миллисекунд");
        long startTime5 = System.currentTimeMillis();
        sorts2.sort(generator.generate(100));
        long timeSpent5 = System.currentTimeMillis() - startTime5;
        System.out.println(" Программа выполнялась " + timeSpent5 + " миллисекунд");
        long startTime6 = System.currentTimeMillis();
        sorts2.sort(generator.generate(1000));
        long timeSpent6 = System.currentTimeMillis() - startTime6;
        System.out.println(" Программа выполнялась " + timeSpent6 + " миллисекунд");
        long startTime7 = System.currentTimeMillis();
        sorts2.sort(generator.generate(10000));
        long timeSpent7 = System.currentTimeMillis() - startTime7;
        System.out.println(" Программа выполнялась " + timeSpent7 + " миллисекунд");
        // ShellSorter for SortedGenerator
        long startTime8 = System.currentTimeMillis();
        sorts3.sort(generator.generate(10));
        long timeSpent8 = System.currentTimeMillis() - startTime8;
        System.out.println(" Программа выполнялась " + timeSpent8 + " миллисекунд");
        long startTime9 = System.currentTimeMillis();
        sorts3.sort(generator.generate(100));
        long timeSpent9 = System.currentTimeMillis() - startTime9;
        System.out.println(" Программа выполнялась " + timeSpent9 + " миллисекунд");
        long startTime10 = System.currentTimeMillis();
        sorts3.sort(generator.generate(1000));
        long timeSpent10 = System.currentTimeMillis() - startTime10;
        System.out.println(" Программа выполнялась " + timeSpent10 + " миллисекунд");
        long startTime11 = System.currentTimeMillis();
        sorts3.sort(generator.generate(10000));
        long timeSpent11 = System.currentTimeMillis() - startTime11;
        System.out.println(" Программа выполнялась " + timeSpent11 + " миллисекунд");
        // QuickSorter for SortedGenerator
        long startTime12 = System.currentTimeMillis();
        sorts4.sort(generator.generate(10));
        long timeSpent12 = System.currentTimeMillis() - startTime12;
        System.out.println(" Программа выполнялась " + timeSpent12 + " миллисекунд");
        long startTime13 = System.currentTimeMillis();
        sorts4.sort(generator.generate(100));
        long timeSpent13 = System.currentTimeMillis() - startTime13;
        System.out.println(" Программа выполнялась " + timeSpent13 + " миллисекунд");
        long startTime14 = System.currentTimeMillis();
        sorts4.sort(generator.generate(1000));
        long timeSpent14 = System.currentTimeMillis() - startTime14;
        System.out.println(" Программа выполнялась " + timeSpent10 + " миллисекунд");
        long startTime15 = System.currentTimeMillis();
        sorts4.sort(generator.generate(10000));
        long timeSpent15 = System.currentTimeMillis() - startTime15;
        System.out.println(" Программа выполнялась " + timeSpent15 + " миллисекунд");
        // DefaultSorter for SortedGenerator
        long startTime16 = System.currentTimeMillis();
        sorts5.sort(generator.generate(10));
        long timeSpent16 = System.currentTimeMillis() - startTime16;
        System.out.println(" Программа выполнялась " + timeSpent16 + " миллисекунд");
        long startTime17 = System.currentTimeMillis();
        sorts5.sort(generator.generate(100));
        long timeSpent17 = System.currentTimeMillis() - startTime17;
        System.out.println(" Программа выполнялась " + timeSpent17 + " миллисекунд");
        long startTime18 = System.currentTimeMillis();
        sorts5.sort(generator.generate(1000));
        long timeSpent18= System.currentTimeMillis() - startTime18;
        System.out.println(" Программа выполнялась " + timeSpent18 + " миллисекунд");
        long startTime19 = System.currentTimeMillis();
        sorts5.sort(generator.generate(10000));
        long timeSpent19 = System.currentTimeMillis() - startTime19;
        System.out.println(" Программа выполнялась " + timeSpent19 + " миллисекунд");
       // BubbleSorter for InverseSortedGenerator
        long startTime01 = System.currentTimeMillis();
        sorts.sort(generator1.generate(10));
        long timeSpent01 = System.currentTimeMillis() - startTime01;
        System.out.println(" Программа выполнялась " + timeSpent01 + " миллисекунд");
        long startTime02 = System.currentTimeMillis();
        sorts.sort(generator1.generate(100));
        long timeSpent02 = System.currentTimeMillis() - startTime02;
        System.out.println(" Программа выполнялась " + timeSpent02 + " миллисекунд");
        long startTime03 = System.currentTimeMillis();
        sorts.sort(generator1.generate(1000));
        long timeSpent03 = System.currentTimeMillis() - startTime03;
        System.out.println(" Программа выполнялась " + timeSpent03 + " миллисекунд");
        long startTime04 = System.currentTimeMillis();
        sorts.sort(generator1.generate(10000));
        long timeSpent04 = System.currentTimeMillis() - startTime04;
        System.out.println(" Программа выполнялась " + timeSpent04 + " миллисекунд");
        // InsertionSorter for InverseSortedGenerator
        long startTime05 = System.currentTimeMillis();
        sorts2.sort(generator1.generate(10));
        long timeSpent05 = System.currentTimeMillis() - startTime05;
        System.out.println(" Программа выполнялась " + timeSpent05 + " миллисекунд");
        long startTime06 = System.currentTimeMillis();
        sorts2.sort(generator1.generate(100));
        long timeSpent06 = System.currentTimeMillis() - startTime06;
        System.out.println(" Программа выполнялась " + timeSpent06 + " миллисекунд");
        long startTime07 = System.currentTimeMillis();
        sorts2.sort(generator1.generate(1000));
        long timeSpent07 = System.currentTimeMillis() - startTime07;
        System.out.println(" Программа выполнялась " + timeSpent07 + " миллисекунд");
        long startTime08 = System.currentTimeMillis();
        sorts2.sort(generator1.generate(10000));
        long timeSpent08 = System.currentTimeMillis() - startTime08;
        System.out.println(" Программа выполнялась " + timeSpent08 + " миллисекунд");
        // ShellSorter for InverseSortedGenerator
        long startTime09 = System.currentTimeMillis();
        sorts3.sort(generator1.generate(10));
        long timeSpent09 = System.currentTimeMillis() - startTime09;
        System.out.println(" Программа выполнялась " + timeSpent09 + " миллисекунд");
        long startTime010 = System.currentTimeMillis();
        sorts3.sort(generator1.generate(100));
        long timeSpent010 = System.currentTimeMillis() - startTime010;
        System.out.println(" Программа выполнялась " + timeSpent010 + " миллисекунд");
        long startTime011 = System.currentTimeMillis();
        sorts3.sort(generator1.generate(1000));
        long timeSpent011 = System.currentTimeMillis() - startTime011;
        System.out.println(" Программа выполнялась " + timeSpent011 + " миллисекунд");
        long startTime012 = System.currentTimeMillis();
        sorts3.sort(generator1.generate(10000));
        long timeSpent012 = System.currentTimeMillis() - startTime012;
        System.out.println(" Программа выполнялась " + timeSpent012 + " миллисекунд");
        // QuickSorter for InverseSortedGenerator
        long startTime013 = System.currentTimeMillis();
        sorts4.sort(generator1.generate(10));
        long timeSpent013 = System.currentTimeMillis() - startTime013;
        System.out.println(" Программа выполнялась " + timeSpent013 + " миллисекунд");
        long startTime014 = System.currentTimeMillis();
        sorts4.sort(generator1.generate(100));
        long timeSpent014 = System.currentTimeMillis() - startTime014;
        System.out.println(" Программа выполнялась " + timeSpent014 + " миллисекунд");
        long startTime015 = System.currentTimeMillis();
        sorts4.sort(generator1.generate(1000));
        long timeSpent015 = System.currentTimeMillis() - startTime015;
        System.out.println(" Программа выполнялась " + timeSpent015 + " миллисекунд");
        long startTime016 = System.currentTimeMillis();
        sorts4.sort(generator1.generate(10000));
        long timeSpent016 = System.currentTimeMillis() - startTime016;
        System.out.println(" Программа выполнялась " + timeSpent016 +" миллисекунд");
        // DefaultSorter   for InverseSortedGenerator
        long startTime017 = System.currentTimeMillis();
        sorts5.sort(generator1.generate(10));
        long timeSpent017 = System.currentTimeMillis() - startTime017;
        System.out.println(" Программа выполнялась " + timeSpent017 + " миллисекунд");
        long startTime018 = System.currentTimeMillis();
        sorts5.sort(generator1.generate(100));
        long timeSpent018 = System.currentTimeMillis() - startTime018;
        System.out.println(" Программа выполнялась " + timeSpent014 + " миллисекунд");
        long startTime019 = System.currentTimeMillis();
        sorts5.sort(generator1.generate(1000));
        long timeSpent019 = System.currentTimeMillis() - startTime019;
        System.out.println(" Программа выполнялась " + timeSpent019 + " миллисекунд");
        long startTime020 = System.currentTimeMillis();
        sorts5.sort(generator1.generate(10000));
        long timeSpent020 = System.currentTimeMillis() - startTime020;
        System.out.println(" Программа выполнялась " + timeSpent020 +" миллисекунд");
        //  BubbleSorter for AlmostSortedGenerator
        long startTime_1 = System.currentTimeMillis();
        sorts.sort(generator2.generate(10));
        long timeSpent_1 = System.currentTimeMillis() - startTime_1;
        System.out.println(" Программа выполнялась " + timeSpent_1 + " миллисекунд");
        long startTime_2 = System.currentTimeMillis();
        sorts.sort(generator2.generate(100));
        long timeSpent_2 = System.currentTimeMillis() - startTime_2;
        System.out.println(" Программа выполнялась " + timeSpent_2 + " миллисекунд");
        long startTime_3 = System.currentTimeMillis();
        sorts.sort(generator2.generate(1000));
        long timeSpent_3 = System.currentTimeMillis() - startTime_3;
        System.out.println(" Программа выполнялась " + timeSpent_3 + " миллисекунд");
        long startTime_4 = System.currentTimeMillis();
        sorts.sort(generator2.generate(10000));
        long timeSpent_4 = System.currentTimeMillis() - startTime_4;
        System.out.println(" Программа выполнялась " + timeSpent_4 +" миллисекунд");
        //  InsertionSorter for AlmostSortedGenerator
        long startTime_5 = System.currentTimeMillis();
        sorts2.sort(generator2.generate(10));
        long timeSpent_5 = System.currentTimeMillis() - startTime_5;
        System.out.println(" Программа выполнялась " + timeSpent_5 + " миллисекунд");
        long startTime_6 = System.currentTimeMillis();
        sorts2.sort(generator2.generate(100));
        long timeSpent_6 = System.currentTimeMillis() - startTime_6;
        System.out.println(" Программа выполнялась " + timeSpent_6 + " миллисекунд");
        long startTime_7 = System.currentTimeMillis();
        sorts2.sort(generator2.generate(1000));
        long timeSpent_7 = System.currentTimeMillis() - startTime_7;
        System.out.println(" Программа выполнялась " + timeSpent_7 + " миллисекунд");
        long startTime_8 = System.currentTimeMillis();
        sorts2.sort(generator2.generate(10000));
        long timeSpent_8 = System.currentTimeMillis() - startTime_8;
        System.out.println(" Программа выполнялась " + timeSpent_8 +" миллисекунд");
        //  ShellSorter for AlmostSortedGenerator
        long startTime_9 = System.currentTimeMillis();
        sorts3.sort(generator2.generate(10));
        long timeSpent_9 = System.currentTimeMillis() - startTime_9;
        System.out.println(" Программа выполнялась " + timeSpent_9 + " миллисекунд");
        long startTime_10 = System.currentTimeMillis();
        sorts3.sort(generator2.generate(100));
        long timeSpent_10 = System.currentTimeMillis() - startTime_10;
        System.out.println(" Программа выполнялась " + timeSpent_10 + " миллисекунд");
        long startTime_11 = System.currentTimeMillis();
        sorts3.sort(generator2.generate(1000));
        long timeSpent_11 = System.currentTimeMillis() - startTime_11;
        System.out.println(" Программа выполнялась " + timeSpent_11 + " миллисекунд");
        long startTime_12 = System.currentTimeMillis();
        sorts3.sort(generator2.generate(10000));
        long timeSpent_12 = System.currentTimeMillis() - startTime_12;
        System.out.println(" Программа выполнялась " + timeSpent_12 +" миллисекунд");
        //  QuickSorter for AlmostSortedGenerator
        long startTime_13 = System.currentTimeMillis();
        sorts4.sort(generator2.generate(10));
        long timeSpent_13 = System.currentTimeMillis() - startTime_13;
        System.out.println(" Программа выполнялась " + timeSpent_13 + " миллисекунд");
        long startTime_14 = System.currentTimeMillis();
        sorts4.sort(generator2.generate(100));
        long timeSpent_14 = System.currentTimeMillis() - startTime_14;
        System.out.println(" Программа выполнялась " + timeSpent_14 + " миллисекунд");
        long startTime_15 = System.currentTimeMillis();
        sorts4.sort(generator2.generate(1000));
        long timeSpent_15 = System.currentTimeMillis() - startTime_15;
        System.out.println(" Программа выполнялась " + timeSpent_15 + " миллисекунд");
        long startTime_16 = System.currentTimeMillis();
        sorts4.sort(generator2.generate(10000));
        long timeSpent_16 = System.currentTimeMillis() - startTime_16;
        System.out.println(" Программа выполнялась " + timeSpent_16 +" миллисекунд");
        // DefaultSorter for AlmostSortedGenerator
        long startTime_17 = System.currentTimeMillis();
        sorts5.sort(generator2.generate(10));
        long timeSpent_17 = System.currentTimeMillis() - startTime_17;
        System.out.println(" Программа выполнялась " + timeSpent_17 + " миллисекунд");
        long startTime_18 = System.currentTimeMillis();
        sorts5.sort(generator2.generate(100));
        long timeSpent_18 = System.currentTimeMillis() - startTime_18;
        System.out.println(" Программа выполнялась " + timeSpent_18 + " миллисекунд");
        long startTime_19 = System.currentTimeMillis();
        sorts5.sort(generator2.generate(1000));
        long timeSpent_19 = System.currentTimeMillis() - startTime_19;
        System.out.println(" Программа выполнялась " + timeSpent_19 + " миллисекунд");
        long startTime_20 = System.currentTimeMillis();
        sorts5.sort(generator2.generate(10000));
        long timeSpent_20 = System.currentTimeMillis() - startTime_20;
        System.out.println(" Программа выполнялась " + timeSpent_20 +" миллисекунд");
        //   BubbleSorter for RandomSortedGenerator
        long startTime_21 = System.currentTimeMillis();
        sorts.sort(generator3.generate(10));
        long timeSpent_21 = System.currentTimeMillis() - startTime_21;
        System.out.println(" Программа выполнялась " + timeSpent_21 + " миллисекунд");
        long startTime_22 = System.currentTimeMillis();
        sorts.sort(generator3.generate(100));
        long timeSpent_22 = System.currentTimeMillis() - startTime_22;
        System.out.println(" Программа выполнялась " + timeSpent_22 + " миллисекунд");
        long startTime_23 = System.currentTimeMillis();
        sorts.sort(generator3.generate(1000));
        long timeSpent_23 = System.currentTimeMillis() - startTime_23;
        System.out.println(" Программа выполнялась " + timeSpent_23 + " миллисекунд");
        long startTime_24 = System.currentTimeMillis();
        sorts.sort(generator3.generate(10000));
        long timeSpent_24 = System.currentTimeMillis() - startTime_24;
        System.out.println(" Программа выполнялась " + timeSpent_24 +" миллисекунд");
        //  InsertionSorter  for RandomSortedGenerator
        long startTime_25 = System.currentTimeMillis();
        sorts2.sort(generator3.generate(10));
        long timeSpent_25 = System.currentTimeMillis() - startTime_25;
        System.out.println(" Программа выполнялась " + timeSpent_25 + " миллисекунд");
        long startTime_26 = System.currentTimeMillis();
        sorts2.sort(generator3.generate(100));
        long timeSpent_26 = System.currentTimeMillis() - startTime_26;
        System.out.println(" Программа выполнялась " + timeSpent_26 + " миллисекунд");
        long startTime_27 = System.currentTimeMillis();
        sorts2.sort(generator3.generate(1000));
        long timeSpent_27 = System.currentTimeMillis() - startTime_27;
        System.out.println(" Программа выполнялась " + timeSpent_27 + " миллисекунд");
        long startTime_28 = System.currentTimeMillis();
        sorts2.sort(generator3.generate(10000));
        long timeSpent_28 = System.currentTimeMillis() - startTime_28;
        System.out.println(" Программа выполнялась " + timeSpent_28 +" миллисекунд");
        // ShellSorter    for RandomSortedGenerator
        long startTime_29 = System.currentTimeMillis();
        sorts3.sort(generator3.generate(10));
        long timeSpent_29 = System.currentTimeMillis() - startTime_29;
        System.out.println(" Программа выполнялась " + timeSpent_29 + " миллисекунд");
        long startTime_30 = System.currentTimeMillis();
        sorts3.sort(generator3.generate(100));
        long timeSpent_30 = System.currentTimeMillis() - startTime_30;
        System.out.println(" Программа выполнялась " + timeSpent_30 + " миллисекунд");
        long startTime_31 = System.currentTimeMillis();
        sorts3.sort(generator3.generate(1000));
        long timeSpent_31 = System.currentTimeMillis() - startTime_31;
        System.out.println(" Программа выполнялась " + timeSpent_31 + " миллисекунд");
        long startTime_32 = System.currentTimeMillis();
        sorts3.sort(generator3.generate(10000));
        long timeSpent_32 = System.currentTimeMillis() - startTime_32;
        System.out.println(" Программа выполнялась " + timeSpent_32 +" миллисекунд");
        // QuickSorter for RandomSortedGenerator
        long startTime_33 = System.currentTimeMillis();
        sorts4.sort(generator3.generate(10));
        long timeSpent_33 = System.currentTimeMillis() - startTime_33;
        System.out.println(" Программа выполнялась " + timeSpent_33 + " миллисекунд");
        long startTime_34 = System.currentTimeMillis();
        sorts4.sort(generator3.generate(100));
        long timeSpent_34 = System.currentTimeMillis() - startTime_34;
        System.out.println(" Программа выполнялась " + timeSpent_34 + " миллисекунд");
        long startTime_35 = System.currentTimeMillis();
        sorts4.sort(generator3.generate(1000));
        long timeSpent_35 = System.currentTimeMillis() - startTime_35;
        System.out.println(" Программа выполнялась " + timeSpent_35 + " миллисекунд");
        long startTime_36 = System.currentTimeMillis();
        sorts4.sort(generator3.generate(10000));
        long timeSpent_36 = System.currentTimeMillis() - startTime_36;
        System.out.println(" Программа выполнялась " + timeSpent_36 +" миллисекунд");
        // DefaultSorter for RandomSortedGenerator
        long startTime_37 = System.currentTimeMillis();
        sorts5.sort(generator3.generate(10));
        long timeSpent_37 = System.currentTimeMillis() - startTime_37;
        System.out.println(" Программа выполнялась " + timeSpent_37 + " миллисекунд");
        long startTime_38 = System.currentTimeMillis();
        sorts5.sort(generator3.generate(100));
        long timeSpent_38 = System.currentTimeMillis() - startTime_38;
        System.out.println(" Программа выполнялась " + timeSpent_38 + " миллисекунд");
        long startTime_39 = System.currentTimeMillis();
        sorts5.sort(generator3.generate(1000));
        long timeSpent_39 = System.currentTimeMillis() - startTime_39;
        System.out.println(" Программа выполнялась " + timeSpent_39 + " миллисекунд");
        long startTime_40 = System.currentTimeMillis();
        sorts5.sort(generator3.generate(10000));
        long timeSpent_40 = System.currentTimeMillis() - startTime_40;
        System.out.println(" Программа выполнялась " + timeSpent_40 +" миллисекунд");
    }


}
